"use strict";(self.webpackChunkoxidizer_website=self.webpackChunkoxidizer_website||[]).push([[237],{9233:function(e,t,n){n.r(t),n.d(t,{default:function(){return V}});var a=n(7294),l=n(7410),i=n(8357),r=n(9962),s=n(6893),o="headline_ddIe",c="category_nvnI",m="title_elIG",d="subtitle_NQs_",u=function(e){var t=e.category,n=e.offset,l=void 0===n?0:n,i=e.subtitle,r=e.title;return a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--"+(12-l)+" col--offset-"+l},a.createElement("div",{className:o},t&&a.createElement("span",{className:c},t),r&&a.createElement("h2",{className:m},r),i&&a.createElement("h3",{className:d},i))))},p="comparison_G3e9",E="table_YSlV",f="label_pnuG",b="result_zbe4",g="resultH_Bfe9",y="resultX_g6UZ",v=[{id:"oxidizer",name:"Oxidizer",highlighted:!0},{id:"diesel",name:"Diesel",highlighted:!1},{id:"rustorm",name:"RustORM",highlighted:!1}],h=[{name:"Asynchronous",values:{oxidizer:!0,diesel:!1,rustorm:!1}},{name:"Raw SQL",values:{oxidizer:!0,diesel:!0,rustorm:!0}},{name:"PostgreSQL",values:{oxidizer:!0,diesel:!0,rustorm:!0}},{name:"MySQL",values:{oxidizer:!1,diesel:!0,rustorm:!0}},{name:"SQLite",values:{oxidizer:!1,diesel:!0,rustorm:!0}}],N=function(){return a.createElement("section",{id:"comparison",className:p},a.createElement("div",{className:"container"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--4 col--offset-1"},a.createElement(u,{category:"Comparison",title:"How does Oxidizer compare to other popular options?",subtitle:"Diesel and RustORM are other great ORM options for Rust. Here are the three crates compared."})),a.createElement("div",{className:"col col--6 col--offset-1"},a.createElement("table",{className:E},a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null),v.map((function(e,t){return a.createElement("th",{key:t},e.name)})))),a.createElement("tbody",null,h.map((function(e,t){return a.createElement("tr",{key:t},a.createElement("td",{className:f},e.name),e.values&&v.length&&v.map((function(t,n){return a.createElement("td",{key:n,className:t.highlighted?g:b},!0===e.values[t.id]?a.createElement(s.UgA,{size:24}):a.createElement(s.q5L,{size:24,className:y}))})))}))))))))},_=n(7462),w=n(3746),k=n(9200),z="code_beph",Z=function(e){var t=(0,r.Z)().siteConfig.themeConfig.prism,n=t.theme,l=t.darkTheme,i=(0,a.useState)(!1),s=i[0],o=i[1];(0,a.useEffect)((function(){o(!0)}),[]);var c=(0,k.I)(),m=c.colorMode,d=(c.setColorMode,"dark"===m?l||n:n),u=e.language,p=void 0===u?"javascript":u,E=e.code;return a.createElement(w.ZP,(0,_.Z)({},w.lG,{code:E,key:s.toString(),language:p,theme:d}),(function(e){var t=e.className,n=e.style,l=e.tokens,i=e.getLineProps,r=e.getTokenProps;return a.createElement("pre",{className:t+" "+z,style:n},l.map((function(e,t){return a.createElement("div",i({line:e,key:t}),e.map((function(e,t){return a.createElement("span",r({token:e,key:t}))})))})))}))},x=n(425),S=n(4259),M=[{label:"Entity",code:'#[derive(Entity, Default)]\n#[entity(table_name = "my_table_name")] // optional\n#[index(name = "myindex", columns = "name, datetime", unique)] // optional\npub struct MyEntity {\n    #[primary_key]\n    id: i32,\n    name: String,\n\n    #[indexed] // optional\n    integer: i32,\n    integer64: i64,\n\n    float: f32,\n    double: f64,\n\n    boolean: bool,\n\n    datetime: Option<DateTime<Utc>>\n}'},{label:"Insert/Update",code:'#[derive(Entity, Default)]\npub struct MyEntity {\n    #[primary_key]\n    id: i32,\n    name: String,\n}\n\n#[tokio::main]\nasync fn main() {\n    let mut entity = MyEntity::default();\n    entity.name = "Hello world"\n\n    let uri = "postgres://postgres:postgres@localhost/postgres";\n    let db = Db::connect(&uri, 50, None).await.unwrap();\n\n    let creating = entity.save(&db).await.unwrap();\n}'},{label:"Select",code:'#[derive(Entity, Default)]\npub struct MyEntity {\n    #[primary_key]\n    id: i32,\n    name: String,\n}\n\n#[tokio::main]\nasync fn main() {\n    let uri = "postgres://postgres:postgres@localhost/postgres";\n    let db = Db::connect(&uri, 50, None).await.unwrap();\n\n    let id = 1;\n    let results = MyEntity::find(&db, "id = $1", &[&id]).await.unwrap();\n}'},{label:"Delete",code:'#[derive(Entity, Default)]\npub struct MyEntity {\n    #[primary_key]\n    id: i32,\n    name: String,\n}\n\n#[tokio::main]\nasync fn main() {\n    let uri = "postgres://postgres:postgres@localhost/postgres";\n    let db = Db::connect(&uri, 50, None).await.unwrap();\n\n    let id = 1;\n    let mut result = MyEntity::first(&db, "id = $1", &[&id]).await.unwrap();\n    let deleted: bool = result.delete(&db).await.unwrap();\n}'}],D=function(){return a.createElement("section",{id:"examples"},a.createElement("div",{className:"container"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--10 col--offset-1"},a.createElement(u,{category:"Examples",title:"Quick snippets to get started with Oxidizer"}),a.createElement(S.Z,{defaultValue:M[0].label,values:M.map((function(e,t){return{label:e.label,value:e.label}}))},M.map((function(e,t){return a.createElement(x.Z,{key:t,value:e.label},a.createElement(Z,(0,_.Z)({key:t},e)))})))))))},O=n(6010),R="features_OUbe",C="feature_CNZF",L="header_pHyv",P="icon_uRsn",G="title_bNZH",Q=[{icon:a.createElement(s.zFh,{size:24}),title:"Dead simple, but powerful",description:"Oxidizer is a Rust ORM based on tokio-postgres and refinery. Two powerful libraries that give performance and reliability to perform database interactions."},{icon:a.createElement(s.Wqx,{size:24}),title:"Asynchronous from the ground up",description:"By using tokio and tokio-postgres, all the database operations are efficiently handled by tokio at runtime."},{icon:a.createElement(s.bGz,{size:24}),title:"Relations",description:" Oxidizer macros generate code to access forward and reverse relations between entities with ease."},{icon:a.createElement(s.Gpi,{size:24}),title:"Productive and Extensible",description:"Write reusable code and think in terms of your problem domain, not SQL."}],H=function(e){var t=e.icon,n=e.title,l=e.description;return a.createElement("div",{className:(0,O.Z)("col col--6",C)},a.createElement("div",{className:"item"},a.createElement("div",{className:L},a.createElement("div",{className:P},t),a.createElement("h2",{className:G},n)),a.createElement("p",null,l)))},I=function(){return a.createElement("section",{id:"features",className:R},a.createElement("div",{className:"container"},a.createElement("div",{className:"row"},a.createElement("div",{className:"col col--11 col--offset-1"},a.createElement("div",{className:"row"},Q.map((function(e,t){return a.createElement(H,(0,_.Z)({key:t},e))})))))))},A=n(3699),U=n(9524),T={banner:"banner_fKAE",logo:"logo__lau",buttons:"buttons_ohZc",subtitle:"subtitle_FshJ"},q=function(){var e=(0,r.Z)().siteConfig,t=e.tagline,n=e.title;return a.createElement("header",{id:"hero",className:(0,O.Z)("hero",T.banner)},a.createElement("div",{className:"container"},a.createElement("img",{src:(0,U.Z)("img/logo.svg"),alt:"Logo",className:T.logo}),a.createElement("h1",{className:"hero__title"},n),a.createElement("p",{className:(0,O.Z)("hero__subtitle",T.subtitle)},t),a.createElement("div",{className:T.buttons},a.createElement(A.Z,{className:(0,O.Z)("button button--primary button--lg",T.getStarted),to:(0,U.Z)("docs/")},"Get Started"))))},F=n(8045),B="main_dzIC";(void 0!==n.g?n.g:window).Prism=l.Z,n(767);var V=function(){var e=(0,r.Z)().siteConfig.tagline;return a.createElement(i.Pd.Provider,{value:{style:{verticalAlign:"middle"}}},a.createElement(F.Z,{description:e},a.createElement(q,null),a.createElement("main",{className:B},a.createElement(I,null),a.createElement(N,null),a.createElement(D,null))))}}}]);