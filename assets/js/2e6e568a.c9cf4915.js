"use strict";(self.webpackChunkoxidizer_website=self.webpackChunkoxidizer_website||[]).push([[54],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=i,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6376:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(7462),i=n(3366),a=(n(7294),n(4137)),o=["components"],s={id:"insert-update",title:"Insert/Update",sidebar_label:"Insert/Update"},l=void 0,p={unversionedId:"examples/insert-update",id:"examples/insert-update",title:"Insert/Update",description:"",source:"@site/docs/examples/insert-update.md",sourceDirName:"examples",slug:"/examples/insert-update",permalink:"/docs/examples/insert-update",draft:!1,editUrl:"https://github.com/oxidizer-rs/website/edit/main/docs/examples/insert-update.md",tags:[],version:"current",frontMatter:{id:"insert-update",title:"Insert/Update",sidebar_label:"Insert/Update"},sidebar:"docs",previous:{title:"Entity (Complex)",permalink:"/docs/examples/entity-complex"},next:{title:"Select",permalink:"/docs/examples/select"}},c={},u=[],d={toc:u};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(Entity, Default)]\npub struct MyEntity {\n    #[primary_key]\n    id: i32,\n    name: String,\n}\n\n#[tokio::main]\nasync fn main() {\n    let mut entity = MyEntity::default();\n    entity.name = "Hello world"\n\n    let uri = "postgres://postgres:postgres@localhost/postgres";\n    let db = Db::connect(&uri, 50, None).await.unwrap();\n\n    // If it has value in the primary key it will update, otherwise it will save.\n    // The result tells which operation was performed.\n    let creating = entity.save(&db).await.unwrap();\n}\n')))}f.isMDXComponent=!0}}]);